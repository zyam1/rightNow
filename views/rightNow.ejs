<!DOCTYPE html>
<html lang="kr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- css -->
    <link rel="stylesheet" href="/static/css/rightNow.css">
    <!-- cdn -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <style>
        /* 스타일을 적용할 부분을 추가하세요. */
        #modalContainer {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            text-align: center;
            z-index: 1502;
            width: 30vw; /* 정사각형으로 만들기 위한 가로 크기 설정 */
            height: 30vw; /* 정사각형으로 만들기 위한 세로 크기 설정 */
            
        }

        #inputText {
            position: relative;
            top: 20%;
            width: 80%;
            height: 80%;
            margin-top: 20px;
            border: none;
            background: transparent;
            display: block;
            margin: 0 auto;
            font-size: 70px;
            resize: none; /* 사용자 크기 조절 비활성화 */
            text-align: center;
            
        }
        .centerImg {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 35%;
            /* z-index: 1500; */
        }
        .centerImg-top {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            width: 35%;
            z-index: 1500;
            pointer-events:none;
        }
        .post:hover{
            z-index: 1200 !important;
        }
        .post.active {
        position: absolute !important;
        top: 50% !important;
        left: 50% !important;
        width:30vw !important; /* 변경된 부분: 50%로 크기 조절 */
        height: auto;
        transform: translate(-50%, -50%) !important; /* 중앙으로 이동 */
        z-index: 1501 !important; /* 다른 post보다 위로 올라가게 설정 */
        }

        .post.active .addpost-content{
         font-size:400% !important;
        }
        /* 확대됐을 */
    </style>
    <title>R!ghtNow</title>
</head>
<body>
    <div class="go-mainButton"  id="goMainButton">
        <a href="/main">
            <img src="/static/img/1x/GatePostButtonT.svg" width="10%" />
        </a>
    </div>

    <div class="sort-button"  id="sort-button">
        <a href="/rightNowSort">
            <img src="/static/img/logos/SVG/sort.svg" width="200%"/>
        </a>
    </div>

    <div id="modalContainer">
        
        <textarea id="inputText" placeholder=""></textarea>
        
    </div>

    <img  class="centerImg" src="/static/img/logos/RightNowCenter.svg" alt="">
    <img  class="centerImg-top" src="/static/img/logos/RightNow_centerTop.svg" alt="">


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var modalContainer = document.getElementById('modalContainer');
            var inputText = document.getElementById('inputText');
            var x_coordinate, y_coordinate,image_number ,size ,rotation;
            var newDiv;

            document.getElementById('goMainButton').addEventListener('click', function (event) {
                event.stopPropagation(); // 상위 이벤트 전파 중지
            });
            document.getElementById('sort-button').addEventListener('click', function (event) {
                event.stopPropagation(); // 상위 이벤트 전파 중지
            });

            
            function showModal() {
                if (!$('.post.active').length){
                    modalContainer.classList.add('modal-open');
                    modalContainer.style.display = 'flex';
                    inputText.value = ''; // 입력값 초기화
                    inputText.focus();
                }

            }

            function hideModal() {
                modalContainer.classList.remove('modal-open');
                modalContainer.style.display = 'none';
                if (!inputText.value.trim()) {
                    // 내용이 없는 경우에만 newDiv 삭제
                    if (newDiv) {
                        newDiv.remove(); // 활성화된 post 삭제
                        newDiv = null; // newDiv 변수 초기화
                    }
                }
                
            }

            function handleSubmit() {
                var userInput = inputText.value.trim(); // 앞뒤 공백을 제거

                if (!userInput) {
                    // 내용이 없을 경우 경고창을 띄우고 함수 종료
                    alert('내용을 입력해주세요.');
                    // location.reload();
                    hideModal();
                    //여기서 생성한거 지워야하는데
                    return;
                }
                hideModal();

                
                var userInput = inputText.value;

                

                console.log(`x:${x_coordinate} y:${y_coordinate} 이미지 넘버:${image_number} 내용:${userInput} 사이즈:${size} 회전:${rotation}`);
                var data = {
                    x_coordinate: x_coordinate,
                    y_coordinate: y_coordinate,
                    image_number: image_number,
                    content: userInput,
                    size: size,
                    rotation: rotation
                };

                axios.post('/uploadPost', data)
                    .then(function (response) {
                        console.log('데이터가 성공적으로 전송되었습니다.' );
      
                        
                    })
                    .catch(function (error) {
                        console.log('데이터 전송 중 에러 발생:', );
                    });
            }

            document.addEventListener('click', function (event) {
                if (modalContainer.classList.contains('modal-open')) {
                    // 모달이 열려있으면 실행하지 않고 모달을 닫음
                    if (newDiv) {
                        newDiv.remove();
                        newDiv = null;
                    }
                    hideModal();
                    return;
                }

                x_coordinate = event.clientX;
                y_coordinate = event.clientY;
                image_number = Math.floor(Math.random() * 25) + 1;
                size = Math.floor(Math.random() * 5) + 1;
                rotation = Math.floor(Math.random() * 9) - 4;

                if (image_number === 1 || image_number === 10 || image_number === 11 || image_number === 12 || image_number === 21) {
                    modalContainer.style.backgroundColor = '#FAFAAA';
                }
                else if (image_number === 2 || image_number === 9 || image_number === 13 || image_number === 14 || image_number === 22) {
                    modalContainer.style.backgroundColor = '#FFB6C1';
                }
                else if (image_number === 3 || image_number === 8 || image_number === 15 || image_number === 18 || image_number === 23) {
                    modalContainer.style.backgroundColor = '#C7EEEB';
                }
                else if (image_number === 4 || image_number === 7 || image_number === 16 || image_number === 19 || image_number === 24) {
                    modalContainer.style.backgroundColor = '#D0FC5C';
                }
                else {
                    modalContainer.style.backgroundColor = '#4371C4'; // 기본 배경 색상
                }
                
                showModal();
             

              if (!$('.post.active').length) {
                newDiv = $(`
                        
                        <div class="post">
                            <img src="/static/img/1x/post_image_${image_number}.svg" alt="Post Image">
                            <div class="addpost-content"></div>
                        </div>
                        
                    
                `);

                newDiv.css({
                        left: x_coordinate- (size * 50) / 2 + 'px',
                        top: y_coordinate- (size * 50) / 2 + 'px',
                        width: size * 75 + 'px', // 예시: size에 따라 이미지 크기를 조절
                        transform: `rotate(${rotation}deg)`,//회전//정령부분에선 이걸빼면됨
                        padding : "0px",
                });
                
                            newDiv.on('contextmenu',function (event) {
                                event.preventDefault();
                                if (modalContainer.style.display === 'flex') {
                                    
                                    return;
                                }
                                if (!$('.post.active').length) {
                                    $(this).toggleClass('active');
                                }else{
                                    $('.post.active').removeClass('active');
                                }
                            }); 
                
                
                const fontSize = size * 7.5;
                newDiv.find('.addpost-content').css('font-size', fontSize*1.2 + 'px');
               
                $("body").append(newDiv);
             
             }    
                
                
            });

            inputText.addEventListener('input', function () {
                const userInput = inputText.value;
                if (newDiv) {
                    newDiv.find('.addpost-content').text(userInput);
                }
            });

            inputText.addEventListener('keyup', function (e) {
                if (e.key === 'Enter') {
                    handleSubmit();
                }
            });
           
            // 모달 내부 클릭 시 모달 닫기 방지
            document.getElementById('modalContainer').addEventListener('click', function (event) {
                event.stopPropagation(); // 상위 이벤트 전파 중지
            });

            // 모달 안의 입력창 클릭 시 모달이 사라지는 것 방지
            document.getElementById('inputText').addEventListener('click', function (event) {
                event.stopPropagation(); // 상위 이벤트 전파 중지
            });
        });

        //post 표시
        function getPost() {
            // 서버에 전달할 데이터 객체 (예: data)
            const data = {
                // 데이터 필드 추가 (필요에 따라)
                // 예: key: value,
            };

            // axios를 사용하여 서버에 POST 요청을 보냅니다.
            axios.post('/getPost', data)
                .then((res) => {
                    // 서버로부터 받은 데이터를 콘솔에 출력
                    console.log(res.data);

                    // 여기서 서버로부터 받은 데이터를 활용하여 필요한 작업을 수행할 수 있습니다.
                    // 예를 들어, 받은 데이터를 가지고 동적으로 HTML을 생성하거나 화면에 표시할 수 있습니다.

                    // 예시: 받은 데이터를 반복하여 화면에 추가
                    for (let i = 0; i < res.data.length; i++) {
                        // res.data[i]를 이용하여 각각의 데이터에 접근할 수 있습니다.


                        const newDiv = $(`
                        
                            <div class="post">
                                <img src="/static/img/1x/post_image_${res.data[i].image_number}.svg" alt="Post Image">
                                <div class="addpost-content">${res.data[i].content}</div>
                            </div>
                            
                        
                        `);

                        const fontSize = res.data[i].size * 7.5; // 예시: size에 따라 적절한 값을 조절
                        newDiv.find('.addpost-content').css('font-size', fontSize*1.2 + 'px');
                        newDiv.css({
                            left: res.data[i].x_coordinate- (res.data[i].size * 50) / 2 + 'px',
                            top: res.data[i].y_coordinate- (res.data[i].size * 50) / 2 + 'px',
                            width: res.data[i].size * 75 + 'px', // 예시: size에 따라 이미지 크기를 조절
                            transform: `rotate(${res.data[i].rotation * 1.5}deg)`,//회전//정령부분에선 이걸빼면됨
                            padding : "0px",
                        });
                        if(!modalContainer.classList.contains('modal-open')){
                            newDiv.on('contextmenu', function (event) {
                                event.preventDefault();
                                if (modalContainer.style.display === 'flex') {
                                    
                                    return;
                                }
                                if (!$('.post.active').length) {
                                    $(this).toggleClass('active');
                                }else{
                                    $('.post.active').removeClass('active');
                                }
                            }); 
                        }
                        

                         $("body").append(newDiv);
                    }
                })
                .catch((error) => {
                    // 오류 발생 시 처리
                    console.error('Error fetching data:', error);
                });
        }

//모달에 x버튼 만들어서hide모달 함수 실행



// 함수 호출
        getPost();

    </script>
</body>
</html>



<!-- 글자수 많아지면 내용이 삐져나감 -->
<!-- 배포해보고 맥북으로 어떻게 보이는지 확인 해야함-->
